#cloud-config

---
write-files:
  - path: /etc/conf.d/nfs
    permissions: '0644'
    content: |
      OPTS_RPC_MOUNTD=""
  - path: /opt/bin/wupiao
    permissions: '0755'
    content: |
      #!/bin/bash
      # [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen
      [ -n "$1" ] && \
        until curl -o /dev/null -sIf http://${1}; do \
          sleep 1 && echo .;
        done;
      exit $?

coreos:
  etcd2:
    name: __NAME__
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    advertise-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    initial-cluster: __ETCD_SEED_CLUSTER__
    proxy: on
  fleet:
    public-ip: $public_ipv4
    metadata: "role=minion"
  flannel:
    interface: $public_ipv4
  units:
    - name: rpcbind.service
      enable: true
      command: start
    - name: rpc-statd.service
      enable: true
      command: start
    - name: flanneld.service
      command: start
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Unit]
            Requires=etcd2.service
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"10.244.0.0/16", "Backend": {"Type": "host-gw"}}'
    - name: docker.service
      command: start
      drop-ins:
        - __PROXY_LINE__name: http-proxy.conf
          __PROXY_LINE__content: |
          __PROXY_LINE__[Service]
          __PROXY_LINE__EnvironmentFile=/etc/environment
      drop-ins:
        - name: 40-flannel.conf
          content: |
            [Unit]
            Requires=flanneld.service
            After=flanneld.service
        - name: 50-docker-options.conf
          content: |
            [Service]
            Environment='DOCKER_OPTS=__DOCKER_OPTIONS__'
    - name: early-docker.service
      drop-ins:
        - __PROXY_LINE__name: http-proxy.conf
          __PROXY_LINE__content: |
            __PROXY_LINE__[Service]
            __PROXY_LINE__EnvironmentFile=/etc/environment
    - name: hyperkube-import.service
      command: start
      content: |
        [Unit]
        Description=Import Hyperkube Docker image
        Wants=docker.service
        After=docker.service
        ConditionPathExists=/vagrant/binaries/hyperkube___RELEASE__.tar
        ConditionPathExists=/vagrant/binaries/hyperkube___RELEASE__.aci
        [Service]
        ExecStart=/usr/bin/docker load --input /vagrant/binaries/hyperkube___RELEASE__.tar
        ExecStart=/usr/bin/rkt fetch --insecure-options=image /vagrant/binaries/hyperkube___RELEASE__.aci
        Type=oneshot
        RemainAfterExit=true
    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=hyperkube-import.service
        After=hyperkube-import.service
        [Service]
        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/usr/bin/mkdir -p /var/log/containers
        Environment=KUBELET_VERSION=__RELEASE___coreos.0
        Environment="RKT_OPTS=--volume var-log,kind=host,source=/var/log \
          --mount volume=var-log,target=/var/log \
          --volume dns,kind=host,source=/etc/resolv.conf \
          --mount volume=dns,target=/etc/resolv.conf"
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
          --api-servers=http://__MASTER_IP__:8080 \
          --network-plugin-dir=/etc/kubernetes/cni/net.d \
          --network-plugin= \
          --register-node=true \
          --allow-privileged=true \
          --config=/etc/kubernetes/manifests \
          --hostname-override=$public_ipv4 \
          --cluster_dns=10.100.0.10 \
          --cluster_domain=__DNS_DOMAIN__
        Restart=always
        RestartSec=10
        WorkingDirectory=/root/
        [Install]
        WantedBy=multi-user.target
  update:
    group: __CHANNEL__
    reboot-strategy: off
